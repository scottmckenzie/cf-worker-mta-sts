trigger:
- main

jobs:
- job: Publish

  pool:
    vmImage: ubuntu-latest

  variables:
  - group: secrets

  steps:
  
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '>=16.18.0'
  
  - task: Npm@1
    inputs:
      command: install
  
  - pwsh: |
      $ErrorActionPreferenc = 'Stop'

      # get namespace
      $null = npx wrangler kv:namespace create KV_DOMAIN
      $ns = npx wrangler kv:namespace list | ConvertFrom-Json | Where-Object title -match 'KV_DOMAIN'
      if ($null -eq $ns) {
        Write-Error 'Could not find KV_DOMAIN namespace'
      }

      # create KV binding
      echo "[env.prd]" >> wrangler.toml
      echo "kv_namespaces = [{binding=`"KV_DOMAIN`", id=`"$($ns.id)`"}]" >> wrangler.toml

      # create routes for each domain in KV
      $domains = @((npx wrangler kv:key list --namespace-id $ns.id | ConvertFrom-Json).name)
      if ($null -eq $domains) {
        Write-Error 'No domains found in namespace KV_DOMAIN'
      }
      echo "routes = [" >> wrangler.toml
      for ($i=0; $i -lt $domains.Count; $i++) {
        $domain = $domains[$i]
        $route = "  { custom_domain = true, pattern = `"mta-sts.$domain`", zone_name = `"$domain`" },"
        if ($i -eq $domains.Count - 1) {
          # remove trailing comma
          $route = $route -replace '.$'
        }
        echo $route >> wrangler.toml
      }
      echo "]" >> wrangler.toml

      # display contents of wrangler.toml
      echo "--"
      cat wrangler.toml
      echo "--"

      # publish worker
      npx wrangler publish --env prd
    env:
      CLOUDFLARE_ACCOUNT_ID: $(AccountId)
      CLOUDFLARE_API_TOKEN: $(ApiToken)
